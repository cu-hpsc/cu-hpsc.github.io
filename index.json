[{"authors":["admin"],"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1566849863,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://cucs-hpsc.github.io/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"","tags":null,"title":"Jed Brown","type":"authors"},{"authors":null,"categories":null,"content":" Flexibility This feature can be used for publishing content such as:\n Online courses Project or software documentation Tutorials  The courses folder may be renamed. For example, we can rename it to docs for software/project documentation or tutorials for creating an online course.\nDelete tutorials To remove these pages, delete the courses folder and see below to delete the associated menu link.\nUpdate site menu After renaming or deleting the courses folder, you may wish to update any [[main]] menu links to it by editing your menu configuration at config/_default/menus.toml.\nFor example, if you delete this folder, you can remove the following from your menu configuration:\n[[main]] name = \u0026quot;Courses\u0026quot; url = \u0026quot;courses/\u0026quot; weight = 50  Or, if you are creating a software documentation site, you can rename the courses folder to docs and update the associated Courses menu configuration to:\n[[main]] name = \u0026quot;Docs\u0026quot; url = \u0026quot;docs/\u0026quot; weight = 50  Update the docs menu If you use the docs layout, note that the name of the menu in the front matter should be in the form [menu.X] where X is the folder name. Hence, if you rename the courses/example/ folder, you should also rename the menu definitions in the front matter of files within courses/example/ from [menu.example] to [menu.\u0026lt;NewFolderName\u0026gt;].\n","date":1536451200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1566796546,"objectID":"59c3ce8e202293146a8a934d37a4070b","permalink":"https://cucs-hpsc.github.io/courses/example/","publishdate":"2018-09-09T00:00:00Z","relpermalink":"/courses/example/","section":"courses","summary":"Learn how to use Academic's docs layout for publishing online courses, software documentation, and tutorials.","tags":null,"title":"Overview","type":"docs"},{"authors":null,"categories":null,"content":" Where and When  CSCI 5576 / 4576: High Performance Scientific Computing Lectures: Mon/Wed/Fri 11-11:50 in ECCR 150 Labs: Fri 9-10:40 in KOBL 300 Website: https://cucs-hpsc.github.io/fall2019 Issues/Questions/etc.: Browse or Create  Zoom  Meeting ID: 214-104-523 Join via web browser: https://cuboulder.zoom.us/j/214104523 Join via Zoom app (using meeting ID) Join via One tap mobile: +16699006833,,214104523# or +16465588656,,214104523# Join via telephone: 1-669-900-6833 or 1-646-558-8656  Calendar  Instructor: Jed Brown  GitHub: @jedbrown Office hours: See calendar in ECOT 824 (usually Tue 14:30-15:30 and Thu 9:00-10:00)  Teaching Assistant: Camden Elliott-Williams  GitHub: @CamdenCU Office hours: Wed 9:30-10:30 and 13:30-14:30 or by appointment in ECCR 1B \u0026ldquo;Systems Lab\u0026rdquo; (see map)  Homework For each assignment, click the link below to accept via GitHub Classroom. This creates a private repository for you to work in. Then git clone the repository to whatever machine you\u0026rsquo;ll work on and follow instructions in the README. Usually you will be asked to read and edit code, run a range of experiments, and interpret/plot data in a Report.ipynb.\n   Assigned Due Description     2019-09-06 2019-09-16 (part by 2019-09-13) Experiments in vectorization    Videos Videos appear automatically on Canvas and linked below.\n   Date Topic     Aug 26 Course introduction and preview of architectural trends   Aug 28 Intro to architecture   Aug 30 Intro to vectorization and ILP   Sep 4 Intro to performance modeling (roofline)   Sep 6 Intro to parallel scaling   Sep 9 Joel Frahm on CU Research Computing (slides)    ","date":-62135596800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1568054586,"objectID":"51928ad4c101e2a8b04b4a7a8650b816","permalink":"https://cucs-hpsc.github.io/fall2019/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/fall2019/","section":"fall2019","summary":"CSCI 5576/4576: Fall 2019: High Performance Scientific Computing","tags":null,"title":"Logistics","type":"docs"},{"authors":null,"categories":null,"content":" In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\nTip 2 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1566796546,"objectID":"74533bae41439377bd30f645c4677a27","permalink":"https://cucs-hpsc.github.io/courses/example/example1/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/courses/example/example1/","section":"courses","summary":"In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim.","tags":null,"title":"Example Page 1","type":"docs"},{"authors":null,"categories":null,"content":" Overview This course will develop the skills necessary to reason about performance of applications and modern architectures, to identify opportunities and side-effects of changes, to develop high-performance software, to transfer algorithmic patterns and lessons learned from different domains, and to communicate such analyses with diverse stakeholders. These skills are important for research and development of numerical methods and performance-sensitive science and engineering applications, obtaining allocations via NSF\u0026rsquo;s XSEDE and DOE ASCR facilities, as well as in jobs affiliated with computing facilities at national labs, industry, and academia.\nWe will introduce widely-used parallel programming models such as OpenMP, MPI, and CUDA, as well as ubiquitous parallel libraries, but the purpose of the course is not to teach interfaces, but to develop skills that will be durable and transferrable.\nPreparation This course does not assume prior experience with parallel programming. It will use Linux command-line tools, and some activities will involve batch computing environments (SLURM). Most exercises will use the C programming language, though you can use any appropriate language for projects. Some of the exercises will involve techniques from numerical computing (e.g., CSCI-3656). I will do my best to avoid assuming prior knowledge of these topics, and to provide resources for you to learn or refresh your memory as we use them.\nEveryone here is capable of succeeding in the course, but the effort level will be higher if most of the topics above are new to you. Regardless of your preparation, it is normal to feel lost sometimes. A big part of pragmatic HPC is learning to efficiently answer your questions through documentation, online resources, and even consulting the code or running experiments. (Most of our software stack is open source.) That said, it\u0026rsquo;s easy to lose lots of time in a rabbit hole. My hope is that you will have the courage to dive into that rabbit hole occasionally, but also to ask questions when stuck and to budget your time for such excursions so that you can complete assignments on-time without compromising your work/life balance.\nApproximate timeline    Week Topics     Aug 26 Introduction and modern computer architecture (vectorization and memory hierarchy)   Sep 2 Performance modeling, analysis, and scaling; profiling   Sep 9 Intro to OpenMP and non-numerical algorithms (sorting and searching)   Sep 16 Parallel algorithmic patterns   Sep 23 Dense linear algebra   Sep 30 Intro to MPI and distributed memory parallelism   Oct 7 Sparse and iterative linear algebra   Oct 14 Domain decomposition   Oct 21 Graph algorithms   Oct 28 GPU programming via OpenMP-5 and CUDA   Nov 4 Parallel file systems and IO   Nov 11 Data analysis/machine learning algorithms and dynamic cloud environments   Nov 18 Particles and N-body systems   Nov 25 Fall Break   Dec 2 Multigrid, FFT, and FMM   Dec 9 Special topics    Evaluation    Activity Percentage     Participation 10%   Labs and homework assignments 40%   Community contribution 15%   Community analysis 15%   Final project (written + presentation) 20%    Git and GitHub Homework assignments and in-class activities will be submitted via Git. This class will use GitHub classroom. Homeworks will be completed by cloning GitHub repositories, completing coding and analysis activities, and pushing completed assignments back to GitHub.\nAssignments may be completed using Coding CSEL Hub and/or RMACC Summit (request an account). Assignments will typically have written analysis, for which I recommend Jupyter.\nIt is notoriously difficult to predict the time required to develop quality code and understand its performance, so please start early to give yourself plenty of time. You are welcome to work together on all assignments, but must acknowledge collaborators. You should ensure that your written work is entirely your own.\nCommunity contributions and analysis Over the course of the semester, you will follow the development activities of an active open source project of your choosing. This should be a project with an active developer community from multiple institutions that discuss their rationale in public, such as a mailing list and/or GitHub/GitLab issues and pull requests. You will write and present about the performance and capability needs of key stakeholders, the way project resources are allocated, their metrics for success, and any notable achievements made over the course of the semester.\nYou will also make a contribution to be merged by the project. Adding new examples and/or improving documentation are extremely valuable contributions, but you may also add features or improve implementations. Please respect the time of project maintainers and reviewers by learning about the project and its expectations and process, communicating in advance if appropriate, and leaving plenty of time for multiple rounds of review and revision.\nDistance sections and labs The lectures for this class can be joined synchronously via Zoom (see instructions); they are also recorded and will be posted here (and automatically on Canvas). Some labs will be activities that can be completed within the time period (with group discussion and compare/contrast) while others will be a jump start for homeworks. I envision that distance students will form groups and set a time for virtual discussion in lieu of synchronous discussion during the lab period. In both settings, there will be a peer evaluation component during which each participant credits one or more peers with some specific contributions to the conversation.\nMoodle Moodle will be used to maintain grades. Please enroll yourself at https://moodle.cs.colorado.edu.\nResources This course will use a variety of online resources and papers. There is no required textbook, but the following resources may be helpful.\n Hager and Wellein (2010), Introduction to High Performance Computing for Scientists and Engineers van de Geijn, Myers, Parikh (2019): LAFF on Programming for High Performance (free online) Eijkhout, Chow, van de Geijn (2017), Introduction to High-Performance Scientific Computing (free PDF) Grama, Gupta, Karypis, Kumar (2003), Introduction to Parallel Computing  Additional resources  Greenbaum and Chartier (2012), Numerical Methods Design, Analysis, and Computer Implementation of Algorithms \u0026ndash; an excellent, comprehensive book. Boyd and Vandenberghe (2018), Introduction to Applied Linear Algebra \u0026ndash; practical introduction to linear algebra for computer scientists; free PDF Trefethen and Bau (1997), Numerical Linear Algebra \u0026ndash; fantastic, but limited to numerical linear algebra and covers more advanced topics. Scopatz and Huff (2015), Effective Computation in Physics \u0026ndash; Python language, data science workflow, and computation.  A SIAM Membership is free for CU students and provides a 30% discount on SIAM books.\nDisability Accommodations If you qualify for accommodations because of a disability, please submit to your professor a letter from Disability Services in a timely manner (for exam accommodations provide your letter at least one week prior to the exam) so that your needs can be addressed. Disability Services determines accommodations based on documented disabilities. Contact Disability Services at 303-492-8671 or by e-mail at dsinfo@colorado.edu. If you have a temporary medical condition or injury, see the Temporary Injuries guidelines under the Quick Links at the Disability Services website and discuss your needs with your professor.\nReligious Observances Campus policy regarding religious observances requires that faculty make every effort to deal reasonably and fairly with all students who, because of religious obligations, have conflicts with scheduled exams, assignments or required assignments/attendance. If this applies to you, please speak with me directly as soon as possible at the beginning of the term. See the campus policy regarding religious observances for full details.\nClassroom Behavior Students and faculty each have responsibility for maintaining an appropriate learning environment. Those who fail to adhere to such behavioral standards may be subject to discipline. Professional courtesy and sensitivity are especially important with respect to individuals and topics dealing with differences of race, color, culture, religion, creed, politics, veteran\u0026rsquo;s status, sexual orientation, gender, gender identity and gender expression, age, disability,and nationalities. Class rosters are provided to the instructor with the student\u0026rsquo;s legal name. I will gladly honor your request to address you by an alternate name or gender pronoun. Please advise me of this preference early in the semester so that I may make appropriate changes to my records. For more information, see the policies on classroom behavior and the student code.\nDiscrimination and Harassment The University of Colorado Boulder (CU Boulder) is committed to maintaining a positive learning, working, and living environment. CU Boulder will not tolerate acts of sexual misconduct, discrimination, harassment or related retaliation against or by any employee or student. CU\u0026rsquo;s Sexual Misconduct Policy prohibits sexual assault, sexual exploitation, sexual harassment,intimate partner abuse (dating or domestic violence), stalking or related retaliation. CU Boulder\u0026rsquo;s Discrimination and Harassment Policy prohibits discrimination, harassment or related retaliation based on race, color,national origin, sex, pregnancy, age, disability, creed, religion, sexual orientation, gender identity, gender expression, veteran status, political affiliation or political philosophy. Individuals who believe they have been subject to misconduct under either policy should contact the Office of Institutional Equity and Compliance (OIEC) at 303-492-2127. Information about the OIEC, the above referenced policies, and the campus resources available to assist individuals regarding sexual misconduct, discrimination, harassment or related retaliation can be found at the OIEC website.\nHonor Code All students enrolled in a University of Colorado Boulder course are responsible for knowing and adhering to the academic integrity policy of the institution. Violations of the policy may include: plagiarism, cheating,fabrication, lying, bribery, threat, unauthorized access, clicker fraud,resubmission, and aiding academic dishonesty. All incidents of academic misconduct will be reported to the Honor Code Council (honor@colorado.edu; 303-735-2273). Students who are found responsible for violating the academic integrity policy will be subject to nonacademic sanctions from the Honor Code Council as well as academic sanctions from the faculty member. Additional information regarding the academic integrity policy can be found at http://honorcode.colorado.edu.\n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1567206505,"objectID":"e9c15258b33f23fe5212de16261d2bc2","permalink":"https://cucs-hpsc.github.io/fall2019/syllabus/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/fall2019/syllabus/","section":"fall2019","summary":"Overview This course will develop the skills necessary to reason about performance of applications and modern architectures, to identify opportunities and side-effects of changes, to develop high-performance software, to transfer algorithmic patterns and lessons learned from different domains, and to communicate such analyses with diverse stakeholders. These skills are important for research and development of numerical methods and performance-sensitive science and engineering applications, obtaining allocations via NSF\u0026rsquo;s XSEDE and DOE ASCR facilities, as well as in jobs affiliated with computing facilities at national labs, industry, and academia.","tags":null,"title":"Syllabus","type":"docs"},{"authors":null,"categories":null,"content":" Programs with more than one part So far, we\u0026rsquo;ve focused on simple programs with only one part, but real programs have several different parts, often with data dependencies. Some parts will be amenable to optimization and/or parallelism and others will not. This principle is called Amdahl\u0026rsquo;s Law.\ndef exec_time(f, p, n=10, latency=1): # Suppose that a fraction f of the total work is amenable to optimization # We run a problem size n with parallelization factor p return latency + (1-f)*n + f*n/p  %matplotlib inline import matplotlib.pyplot as plt import pandas import numpy as np plt.style.use('seaborn') ps = np.geomspace(1, 1000) plt.loglog(ps, exec_time(.99, ps, latency=0)) plt.loglog(ps, exec_time(1, ps, latency=0)) plt.title('Strong scaling') plt.xlabel('p') plt.ylabel('time');  Strong scaling: fixed total problem size Cost = time * p def exec_cost(f, p, **kwargs): return exec_time(f, p, **kwargs) * p plt.loglog(ps, exec_cost(.99, ps)) plt.title('Strong scaling') plt.xlabel('p') plt.ylabel('cost');  Efficiency plt.semilogx(ps, 1/exec_cost(.99, ps, latency=1)) plt.title('Strong scaling') plt.xlabel('p') plt.ylabel('efficiency') plt.ylim(bottom=0);  Speedup $$ S(p) = \\frac{T(1)}{T(p)} $$\nplt.plot(ps, exec_time(.99, 1, latency=1) / exec_time(.99, ps, latency=1)) plt.title('Strong scaling') plt.xlabel('p') plt.ylabel('speedup') plt.ylim(bottom=0);  Stunt 1: Report speedup, not absolute performance! Efficiency-Time spectrum (my preference) People care about two observable properties * Time until job completes * Cost in core-hours or dollars to do job\nMost HPC applications have access to large machines, so don\u0026rsquo;t really care how many processes they use for any given job.\nplt.plot(exec_time(.99, ps), 1/exec_cost(.99, ps), 'o-') plt.title('Strong scaling') plt.xlabel('time') plt.ylabel('efficiency') plt.ylim(bottom=0); plt.xlim(left=0);  Principles  No \u0026ldquo;soft\u0026rdquo; log scale Both axes have tangible units Bigger is better on the $y$ axis  Weak Scaling: Fixed work per processor We\u0026rsquo;ve kept the problem size $n$ fixed thus far, but parallel computers are also used to solve large problems. If we keep the amount of work per processor fixed, we are weak/Gustafson scaling.\nns = 10*ps plt.semilogx(ps, ns/exec_cost(.99, ps, n=ns, latency=1), 'o-') ns = 100*ps plt.semilogx(ps, ns/exec_cost(.99, ps, n=ns, latency=1), 's-') plt.title('Weak scaling') plt.xlabel('procs') plt.ylabel('efficiency') plt.ylim(bottom=0);  for w in np.geomspace(0.1, 1e3, 20): ns = w*ps plt.semilogx(exec_time(.99, ps, n=ns, latency=1), ns/exec_cost(.99, ps, n=ns, latency=1), 'o-') plt.title('Weak scaling') plt.xlabel('time') plt.ylabel('efficiency') plt.ylim(bottom=0);  Fuhrer et al (2018): Near-global climate simulation at 1 km resolution I replotted these data for my talk at the Latsis Symposium last month.\nFurther resources  Hager: Fooling the masses  Learn by counter-examples  Hoefler and Belli: Scientific Benchmarking of Parallel Computing Systems  Recommended best practices, especially for dealing with performance variability   Please read/watch something from this list and be prepared to share on Monday.\n","date":1567778851,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1567795563,"objectID":"2926b880e944c22aa6e3f38e1d6b50ee","permalink":"https://cucs-hpsc.github.io/fall2019/intro-parallel-scaling/","publishdate":"2019-09-06T08:07:31-06:00","relpermalink":"/fall2019/intro-parallel-scaling/","section":"fall2019","summary":"Programs with more than one part So far, we\u0026rsquo;ve focused on simple programs with only one part, but real programs have several different parts, often with data dependencies. Some parts will be amenable to optimization and/or parallelism and others will not. This principle is called Amdahl\u0026rsquo;s Law.\ndef exec_time(f, p, n=10, latency=1): # Suppose that a fraction f of the total work is amenable to optimization # We run a problem size n with parallelization factor p return latency + (1-f)*n + f*n/p  %matplotlib inline import matplotlib.","tags":null,"title":"Intro to Parallel Scaling","type":"docs"},{"authors":null,"categories":null,"content":" Why model performance? Models give is a conceptual and roughly quantitative framework by which to answer the following types of questions.\n Why is an implementation exhibiting its observed performance? How will performance change if we:  optimize this component? buy new hardware? (Which new hardware?) run a different configuration?  While conceptualizing a new algorithm, what performance can we expect and what will be bottlenecks?  Models are a guide for performance, but not an absolute.\nTerms    Symbol Meaning     $n$ Input parameter related to problem size   $W$ Amount of work to solve problem $n$   $T$ Execution time   $R$ Rate at which work is done    STREAM Triad for (i=0; i\u0026lt;n; i++) a[i] = b[i] + scalar*c[i];  $n$ is the array size and $$W = 3 \\cdot \\texttt{sizeof(double)} \\cdot n$$ is the number of bytes transferred. The rate $R = W/T$ is measured in bytes per second (or MB/s, etc.).\nDense matrix multiplication To perform the operation $C \\gets C + A B$ where $A,B,C$ are $n\\times n$ matrices.\nfor (i=0; i\u0026lt;n; i++) for (j=0; j\u0026lt;n; j++) for (k=0; k\u0026lt;n; k++) c[i*n+j] += a[i*n+k] * b[k*n+j];   Can you identify two expressions for the total amount of work $W(n)$ and the associated units? Can you think of a context in which one is better than the other and vice-versa?  Estimating time To estimate time, we need to know how fast hardware executes flops and moves bytes.\n%matplotlib inline import matplotlib.pyplot as plt import pandas import numpy as np plt.style.use('seaborn') hardware = pandas.read_csv('data-intel.csv', index_col=\u0026quot;Name\u0026quot;) hardware   .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; }    Year GFLOPs-SP GFLOPs-DP Cores Mem-GBps TDP Freq(MHz)   Name            Xeon X5482 2007 102 51 4 26 150 3200   Xeon X5492 2008 108 54 4 26 150 3400   Xeon W5590 2009 106 53 4 32 130 3300   Xeon X5680 2010 160 80 6 32 130 3300   Xeon X5690 2011 166 83 6 32 130 3470   Xeon E5-2690 2012 372 186 8 51 135 2900   Xeon E5-2697 v2 2013 518 259 12 60 130 2700   Xeon E5-2699 v3 2014 1324 662 18 68 145 2300   Xeon E5-2699 v3 2015 1324 662 18 68 145 2300   Xeon E5-2699 v4 2016 1548 774 22 77 145 2200   Xeon Platinum 8180 2017 4480 2240 28 120 205 2500   Xeon Platinum 9282 2018 9320 4660 56 175 400 2600     fig = hardware.plot(x='GFLOPs-DP', y='Mem-GBps', marker='o') fig.set_xlim(left=0) fig.set_ylim(bottom=0);  So we have rates $R_f = 4660 \\cdot 10^9$ flops/second and $R_m = 175 \\cdot 10^9$ bytes/second. Now we need to characterize some algorithms.\nalgs = pandas.read_csv('algs.csv', index_col='Name') algs['intensity'] = algs['flops'] / algs['bytes'] algs = algs.sort_values('intensity') algs   .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; }    bytes flops intensity   Name        Triad 24 2 0.083333   SpMV 12 2 0.166667   Stencil27-cache 24 54 2.250000   MatFree-FEM 2376 15228 6.409091   Stencil27-ideal 8 54 6.750000     def exec_time(machine, alg, n): bytes = n * alg.bytes flops = n * alg.flops T_mem = bytes / (machine['Mem-GBps'] * 1e9) T_flops = flops / (machine['GFLOPs-DP'] * 1e9) return max(T_mem, T_flops) exec_time(hardware.loc['Xeon Platinum 9282'], algs.loc['SpMV'], 1e8)  0.006857142857142857  for _, machine in hardware.iterrows(): for _, alg in algs.iterrows(): ns = np.geomspace(1e4, 1e9, 10) times = np.array([exec_time(machine, alg, n) for n in ns]) flops = np.array([alg.flops * n for n in ns]) rates = flops/times plt.loglog(ns, rates, 'o-') plt.xlabel('n') plt.ylabel('rate');  It looks like performance does not depend on problem size.\nWell, yeah, we chose a model in which flops and bytes were both proportional to $n$, and our machine model has no sense of cache hierarchy or latency, so time is also proportional to $n$. We can divide through by $n$ and yield a more illuminating plot.\nfor _, machine in hardware.iterrows(): times = np.array([exec_time(machine, alg, 1) for _, alg in algs.iterrows()]) rates = algs.flops/times intensities = algs.intensity plt.loglog(intensities, rates, 'o-', label=machine.name) plt.xlabel('intensity') plt.ylabel('rate') plt.legend();  We\u0026rsquo;re seeing the \u0026ldquo;roofline\u0026rdquo; for the older processors while the newer models are memory bandwidth limited for all of these algorithms.\nRecommended reading on single-node performance modeling  Williams, Waterman, Patterson (2009): Roofline: An insightful visual performance model for multicore architectures  ","date":1567610248,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1567794459,"objectID":"80593eab3fbd65c9fcac19929daefb89","permalink":"https://cucs-hpsc.github.io/fall2019/intro-modeling/","publishdate":"2019-09-04T09:17:28-06:00","relpermalink":"/fall2019/intro-modeling/","section":"fall2019","summary":"Why model performance? Models give is a conceptual and roughly quantitative framework by which to answer the following types of questions.\n Why is an implementation exhibiting its observed performance? How will performance change if we:  optimize this component? buy new hardware? (Which new hardware?) run a different configuration?  While conceptualizing a new algorithm, what performance can we expect and what will be bottlenecks?  Models are a guide for performance, but not an absolute.","tags":null,"title":"Introduction to Performance Modeling","type":"docs"},{"authors":null,"categories":null,"content":" Remember how single-thread performance has increased significantly since ~2004 when clock frequency stagnated?\nThis is a result of doing more per clock cycle.\nLet\u0026rsquo;s visit some slides:\n Georg Hager (2019): Modern Computer Architucture  Further resources  Intel Intrinsics Guide Wikichip  Intel Xeon: Cascade Lake AMD EPYC gen2: Rome IBM POWER9  Agner Fog\u0026rsquo;s website  ","date":1567184400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1567206505,"objectID":"28d2cfe1e2d75d1102ca03a990db79bf","permalink":"https://cucs-hpsc.github.io/fall2019/intro-vectorization/","publishdate":"2019-08-30T11:00:00-06:00","relpermalink":"/fall2019/intro-vectorization/","section":"fall2019","summary":" Remember how single-thread performance has increased significantly since ~2004 when clock frequency stagnated?\nThis is a result of doing more per clock cycle.\nLet\u0026rsquo;s visit some slides:\n Georg Hager (2019): Modern Computer Architucture  Further resources  Intel Intrinsics Guide Wikichip  Intel Xeon: Cascade Lake AMD EPYC gen2: Rome IBM POWER9  Agner Fog\u0026rsquo;s website  ","tags":null,"title":"Vectorization and Instruction-Level Parallelism","type":"docs"},{"authors":null,"categories":null,"content":" Cores, caches, and memory A von Neumann Architecture A contemporary architecture My laptop We can get this kind of information for our machine using hwloc, which provides a library as well as the command-line tool lstopo.\n!lstopo --output-format svg \u0026gt; lstopo-local.svg  A double-socket compute node with two GPUs 2x Xeon Ivy-Bridge-EP E5-2680v2 + 2x NVIDIA GPUs (from 2013, with hwloc v1.11). GPUs are reported as CUDA devices and X11 display :1.0: (from the hwloc gallery) Block diagrams A block diagram from a vendor can include additional information about how cores are physically connected.\nRing bus (Xeon E5-2600 family) Mesh bus (Xeon Scalable family) Multi-socket configurations https://software.intel.com/en-us/articles/intel-xeon-processor-scalable-family-technical-overview\nMultiple nodes go into racks or cabinets Terminology  Core (virtual and physical): has a single program counter (logically sequential processing of instructions) Memory channel: e.g., DDR4-2400: transfers 64 bits (8 bytes) at a rate of 2400 MHz = 15.36 GB/s Socket or CPU: contains multiple cores in a single piece* of silicon Non-Uniform Memory Access (NUMA): different channels may be different distances from a core Compute node: one or more sockets, plus memory, network card, etc.  How expensive is it to access memory? What does that mean? How would we measure?\nMcKenney (2013): Laws of Physics\nInteractive\nVariation by vendor\nHow your program accesses memory double a[1000]; void foo() { for (int i=0; i\u0026lt;1000; i++) a[i] = 1.234 * i; }  The compiler turns the loop body into instructions, which we can examine using Godbolt.\npxor xmm0, xmm0 ; zero the xmm0 register cvtsi2sd xmm0, eax ; convert the integer i to double mulsd xmm0, xmm1 ; multiply by 1.234 (held in xmm1) movsd QWORD PTR a[0+rax*8], xmm0 ; store to memory address a[i]  Only one instruction here accesses memory, and the performance will be affected greatly by where that memory resides (which level of cache, where in DRAM).\nMost architectures today have 64-byte cache lines: all transfers from main memory (DRAM) to and from cache operate in units of 64 bytes.\nLet\u0026rsquo;s compare three code samples for (int i=0; i\u0026lt;N; i++) a[i] = b[i];  for (int i=0; i\u0026lt;N; i++) a[i] = b[(i*8) % N];  for (int i=0; i\u0026lt;N; i++) a[i] = b[random() % N];  What happens when you request a cache line? Operating system effects Most systems today use virtual addressing, so every address in your program needs to be translated to a physical address before looking for it (in cache or memory). Fortunately, there is hardware to assist with this: the Translation Lookaside Buffer (TLB).\nFurther resources  Julia Evans (2016): How much memory is my process using? Gustavo Duarte (2009): Cache: a place for concealment and safekeeping Gustavo Duarte (2009): Getting Physical With Memory Ulrich Drepper (2007): What Every Programmer Should Know About Memory  ","date":1567001418,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1567206505,"objectID":"78f1d8586b6b21bb4f04a177e8e4340f","permalink":"https://cucs-hpsc.github.io/fall2019/intro-architecture/","publishdate":"2019-08-28T08:10:18-06:00","relpermalink":"/fall2019/intro-architecture/","section":"fall2019","summary":"Cores, caches, and memory A von Neumann Architecture A contemporary architecture My laptop We can get this kind of information for our machine using hwloc, which provides a library as well as the command-line tool lstopo.\n!lstopo --output-format svg \u0026gt; lstopo-local.svg  A double-socket compute node with two GPUs 2x Xeon Ivy-Bridge-EP E5-2680v2 + 2x NVIDIA GPUs (from 2013, with hwloc v1.11). GPUs are reported as CUDA devices and X11 display :1.","tags":null,"title":"Intro to Architecture","type":"docs"},{"authors":null,"categories":null,"content":" Here are some more tips for getting started with Academic:\nTip 3 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\nTip 4 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1566796546,"objectID":"1c2b5a11257c768c90d5050637d77d6a","permalink":"https://cucs-hpsc.github.io/courses/example/example2/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/courses/example/example2/","section":"courses","summary":"Here are some more tips for getting started with Academic:\nTip 3 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus.","tags":null,"title":"Example Page 2","type":"docs"},{"authors":null,"categories":null,"content":"https://www.karlrupp.net/2018/02/42-years-of-microprocessor-trend-data/\nhttps://www.karlrupp.net/2013/06/cpu-gpu-and-mic-hardware-characteristics-over-time/\n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1566796546,"objectID":"caba13451aa50e0e0e40912f3d66e772","permalink":"https://cucs-hpsc.github.io/fall2019/trends/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/fall2019/trends/","section":"fall2019","summary":"https://www.karlrupp.net/2018/02/42-years-of-microprocessor-trend-data/\nhttps://www.karlrupp.net/2013/06/cpu-gpu-and-mic-hardware-characteristics-over-time/","tags":null,"title":"Trends","type":"docs"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Academic\u0026rsquo;s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further talk details can easily be added to this page using Markdown and $\\rm \\LaTeX$ math code.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1566796546,"objectID":"96344c08df50a1b693cc40432115cbe3","permalink":"https://cucs-hpsc.github.io/talk/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example/","section":"talk","summary":"An example talk using Academic's Markdown slides feature.","tags":[],"title":"Example Talk","type":"talk"},{"authors":[],"categories":[],"content":" Welcome to Slides Academic\nFeatures  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides  Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E  Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = \\;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \nA fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears  Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view   Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links   night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links  Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/img/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}  Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1566796546,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://cucs-hpsc.github.io/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Academic's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":null,"categories":null,"content":"","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1566796546,"objectID":"d1311ddf745551c9e117aa4bb7e28516","permalink":"https://cucs-hpsc.github.io/project/external-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/external-project/","section":"project","summary":"An example of linking directly to an external project website using `external_link`.","tags":["Demo"],"title":"External Project","type":"project"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1566796546,"objectID":"8f66d660a9a2edc2d08e68cc30f701f7","permalink":"https://cucs-hpsc.github.io/project/internal-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/internal-project/","section":"project","summary":"An example of using the in-built project page.","tags":["Deep Learning"],"title":"Internal Project","type":"project"}]